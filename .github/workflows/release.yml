name: Release Artifacts

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (optional)'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: JforexRestful
          path: artifacts

      - name: Install GitHub CLI
        run: |
          curl -sSL https://github.com/cli/cli/releases/download/v2.4.0/gh_2.4.0_linux_amd64.tar.gz | sudo tar xz -C /usr/local/bin --strip-components 1 gh_2.4.0_linux_amd64/bin/gh

      - name: Set custom version (if provided)
        id: custom_version
        run: |
          CUSTOM_VERSION="${{ github.event.inputs.version }}"
          echo "Custom version: $CUSTOM_VERSION"
          echo "CUSTOM_VERSION=$CUSTOM_VERSION" >> $GITHUB_ENV

      - name: Fetch latest release version and increment
        id: version
        run: |
          LATEST_VERSION=$(gh release list --repo ${{ github.repository }} --limit 1 | awk '{print $1}')
          echo "Latest version: $LATEST_VERSION"

          if [[ -n "${CUSTOM_VERSION}" && "${CUSTOM_VERSION}" > "${LATEST_VERSION}" ]]; then
            NEW_VERSION=${CUSTOM_VERSION}
          else
            if [[ -z "${LATEST_VERSION}" ]]; then
              NEW_VERSION="v1.0.0"
            else
              NEW_VERSION="v$(echo $LATEST_VERSION | cut -c 2- | awk -F. '{print $1"."$2"."$3 + 1}')"
            fi
          fi

          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Create and publish release
        run: |
          gh release create $NEW_VERSION --title "Release $NEW_VERSION" --notes "Auto-generated release" --repo ${{ github.repository }} --target main

      - name: Upload JAR as a Release Asset
        run: |
          gh release upload $NEW_VERSION artifacts/JforexRestful.jar --c "application/java-archive" --repo ${{ github.repository }}
